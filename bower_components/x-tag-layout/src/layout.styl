
x-layout {
  /* relative positioning is important because x-layout should really be
  * placed in a parent container for it to fill;
  * also, setting position:absolute causes older flexbox implementations,
  * such as Firefox 18 (which is the version in FirefoxOS) to render
  * flex items in a way such that it won't override a height:0 declaration,
  * which is important for allowing the flex item to shrink past its
  * content size */
  position: relative!important;

  display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox;      /* TWEENER - IE 10 */
  display: -webkit-flex;     /* NEW - Chrome */
  display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
  width: 100%;
  height: 100%;
  border: 1px solid #999;
  overflow: hidden;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -ms-box-orient: vertical;
  box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

x-layout > header, x-layout > footer {
  margin: 0 !important;
  overflow: hidden;
  z-index: 1;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
}

x-layout > header, x-layout > footer {
  -webkit-transition: -webkit-transform 0.2s ease-in-out;
  -moz-transition: -moz-transform 0.2s ease-in-out;
  -ms-transition: -ms-transform 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out;
}

x-layout > section {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-transition: margin 0.2s ease-in-out
  -moz-transition: margin 0.2s ease-in-out;
  -ms-transition: margin 0.2s ease-in-out;
  transition: margin 0.2s ease-in-out;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  overflow: auto;
  /* DON'T ERASE THIS: although this gets overridden by the flex display
  * render, this fixes an issue with older browsers (ex: FF18) where unless
  * a flex item was height 0, it would refuse to shrink past the auto
  * height of the content, preventing the scrollbar from appearing */
  height: 0;
  position: relative;
}

x-layout:not([content-maximizing]):not([maxcontent]) > section{
  margin: 0 !important;
}

x-layout > section > *:only-child{
  /* fix for issue where 100% height children of flex items render as zero
  * height in Webkit
  * see: http://stackoverflow.com/a/15389545
  */
  position: absolute;
}

x-layout[content-maximizing] > header, x-layout[content-maximized] > header, x-layout[maxcontent] > header{
  -webkit-transform: translateY(-100%);
  -moz-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
}

x-layout[content-maximizing] > footer, x-layout[content-maximized] > footer, x-layout[maxcontent] > footer  {
  -webkit-transform: translateY(100%);
  -moz-transform: translateY(100%);
  -ms-transform: translateY(100%);
  transform: translateY(100%);
}

